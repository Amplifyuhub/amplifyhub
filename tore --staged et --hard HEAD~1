[1mdiff --git a/et --hard HEAD~1 b/et --hard HEAD~1[m
[1mnew file mode 100644[m
[1mindex 0000000..4f37607[m
[1m--- /dev/null[m
[1m+++ b/et --hard HEAD~1[m	
[36m@@ -0,0 +1,26 @@[m
[32m+[m
[32m+[m[32m                   SSUUMMMMAARRYY OOFF LLEESSSS CCOOMMMMAANNDDSS[m
[32m+[m
[32m+[m[32m      Commands marked with * may be preceded by a number, _N.[m
[32m+[m[32m      Notes in parentheses indicate the behavior if _N is given.[m
[32m+[m[32m      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.[m
[32m+[m
[32m+[m[32m  h  H                 Display this help.[m
[32m+[m[32m  q  :q  Q  :Q  ZZ     Exit.[m
[32m+[m[32m ---------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m                           MMOOVVIINNGG[m
[32m+[m
[32m+[m[32m  e  ^E  j  ^N  CR  *  Forward  one line   (or _N lines).[m
[32m+[m[32m  y  ^Y  k  ^K  ^P  *  Backward one line   (or _N lines).[m
[32m+[m[32m  f  ^F  ^V  SPACE  *  Forward  one window (or _N lines).[m
[32m+[m[32m  b  ^B  ESC-v      *  Backward one window (or _N lines).[m
[32m+[m[32m  z                 *  Forward  one window (and set window to _N).[m
[32m+[m[32m  w                 *  Backward one window (and set window to _N).[m
[32m+[m[32m  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.[m
[32m+[m[32m  d  ^D             *  Forward  one half-window (and set half-window to _N).[m
[32m+[m[32m  u  ^U             *  Backward one half-window (and set half-window to _N).[m
[32m+[m[32m  ESC-)  RightArrow *  Right one half screen width (or _N positions).[m
[32m+[m[32m  ESC-(  LeftArrow  *  Left  one half screen width (or _N positions).[m
[32m+[m[32m  ESC-}  ^RightArrow   Right to last column displayed.[m
[32m+[m[32m  ESC-{  ^LeftArrow    Left  to first column.[m
[1mdiff --git a/src/pages/CadastroAnunciante.tsx b/src/pages/CadastroAnunciante.tsx[m
[1mindex 9f74fa7..64bb50f 100644[m
[1m--- a/src/pages/CadastroAnunciante.tsx[m
[1m+++ b/src/pages/CadastroAnunciante.tsx[m
[36m@@ -1,163 +1,320 @@[m
 import React, { useState } from 'react';[m
 import { useNavigate, useLocation } from 'react-router-dom';[m
[31m-import { Input } from '../components/ui/Input';[m
[31m-import { Button } from '../components/ui/Button';[m
[31m-import { Select } from '../components/ui/Select';[m
[31m-import { MaskedInput } from '../components/ui/MaskedInput';[m
[31m-import { Alert } from '../components/ui/Alert';[m
 import { databaseService } from '../services/database.service';[m
 [m
 const CadastroAnunciante = () => {[m
   const navigate = useNavigate();[m
   const location = useLocation();[m
   const [nome, setNome] = useState('');[m
[32m+[m[32m  const [razaoSocial, setRazaoSocial] = useState('');[m
[32m+[m[32m  const [cnpj, setCnpj] = useState('');[m
   const [email, setEmail] = useState('');[m
   const [senha, setSenha] = useState('');[m
[32m+[m[32m  const [confirmacaoSenha, setConfirmacaoSenha] = useState('');[m
[32m+[m[32m  const [categoria, setCategoria] = useState('');[m
[32m+[m[32m  const [nichos, setNichos] = useState<string[]>([]);[m
[32m+[m[32m  const [nichoInput, setNichoInput] = useState('');[m
[32m+[m[32m  const [instagram, setInstagram] = useState('');[m
   const [telefone, setTelefone] = useState('');[m
[31m-  const [cnpj, setCnpj] = useState('');[m
[31m-  const [razaoSocial, setRazaoSocial] = useState('');[m
[31m-  const [segmento, setSegmento] = useState('');[m
[32m+[m[32m  const [erro, setErro] = useState('');[m
   const [loading, setLoading] = useState(false);[m
[31m-  const [error, setError] = useState('');[m
 [m
[31m-  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {[m
[32m+[m[32m  // Categorias dispon√≠veis (mesmas do cadastro de influenciador)[m
[32m+[m[32m  const categorias = [[m
[32m+[m[32m    'Moda e Estilo',[m
[32m+[m[32m    'Beleza e Cosm√©ticos',[m
[32m+[m[32m    'Lifestyle',[m
[32m+[m[32m    'Gastronomia e Culin√°ria',[m
[32m+[m[32m    'Fitness e Sa√∫de',[m
[32m+[m[32m    'Tecnologia e Games',[m
[32m+[m[32m    'Viagens e Turismo',[m
[32m+[m[32m    'Educa√ß√£o e Carreira',[m
[32m+[m[32m    'Finan√ßas Pessoais',[m
[32m+[m[32m    'Maternidade e Fam√≠lia',[m
[32m+[m[32m    'Pets e Animais',[m
[32m+[m[32m    'Decora√ß√£o e Casa',[m
[32m+[m[32m    'Arte e Cultura',[m
[32m+[m[32m    'M√∫sica e Entretenimento',[m
[32m+[m[32m    'Esportes',[m
[32m+[m[32m    'Sustentabilidade',[m
[32m+[m[32m    'Humor e Com√©dia',[m
[32m+[m[32m    'Neg√≥cios e Empreendedorismo',[m
[32m+[m[32m    'Bem-estar e Mindfulness',[m
[32m+[m[32m    'Outros'[m
[32m+[m[32m  ];[m
[32m+[m
[32m+[m[32m  // Adicionar um nicho √† lista[m
[32m+[m[32m  const adicionarNicho = () => {[m
[32m+[m[32m    if (nichoInput.trim() && !nichos.includes(nichoInput.trim())) {[m
[32m+[m[32m      setNichos([...nichos, nichoInput.trim()]);[m
[32m+[m[32m      setNichoInput('');[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // Remover um nicho da lista[m
[32m+[m[32m  const removerNicho = (index: number) => {[m
[32m+[m[32m    setNichos(nichos.filter((_, i) => i !== index));[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSubmit = async (e: React.FormEvent) => {[m
     e.preventDefault();[m
     setLoading(true);[m
[31m-    setError('');[m
[32m+[m[32m    setErro('');[m
 [m
     try {[m
[32m+[m[32m      // Valida√ß√µes b√°sicas[m
[32m+[m[32m      if (!nome || !razaoSocial || !cnpj || !email || !senha || !categoria || nichos.length === 0) {[m
[32m+[m[32m        throw new Error('Por favor, preencha todos os campos obrigat√≥rios.');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (senha !== confirmacaoSenha) {[m
[32m+[m[32m        throw new Error('As senhas n√£o coincidem.');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Criar usu√°rio no Supabase[m
       const userData = {[m
         name: nome,[m
         email,[m
         password: senha,[m
         user_type: 'anunciante' as const,[m
[31m-        phone: telefone,[m
         company_name: razaoSocial,[m
[31m-        segment: segmento[m
[32m+[m[32m        cnpj: cnpj,[m
[32m+[m[32m        category: categoria,[m
[32m+[m[32m        niches: nichos,[m
[32m+[m[32m        instagram: instagram,[m
[32m+[m[32m        phone: telefone[m
       };[m
 [m
[31m-      const user = await databaseService.createUser(userData);[m
[32m+[m[32m      await databaseService.createUser(userData);[m
 [m
       const state = { [m
         userType: 'anunciante',[m
         returnTo: location.state?.returnTo [m
       };[m
       [m
[31m-      console.log('Navigating to confirmation with state:', state);[m
[31m-      [m
       navigate('/confirmacao-cadastro', { state });[m
[31m-    } catch (err: any) {[m
[31m-      if (err.response?.data?.message) {[m
[31m-        setError(err.response.data.message);[m
[31m-      } else {[m
[31m-        setError('Ocorreu um erro ao realizar o cadastro. Tente novamente.');[m
[31m-      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('Erro ao cadastrar:', error);[m
[32m+[m[32m      setErro(error instanceof Error ? error.message : 'Ocorreu um erro ao cadastrar. Por favor, tente novamente.');[m
     } finally {[m
       setLoading(false);[m
     }[m
   };[m
 [m
   return ([m
[31m-    <div className="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-4">[m
[31m-      <div className="max-w-4xl w-full bg-white rounded-lg shadow-lg overflow-hidden">[m
[31m-        <div className="flex flex-col md:flex-row">[m
[31m-          <div className="md:w-1/2">[m
[31m-            <div className="h-48 md:h-full relative">[m
[31m-              <img[m
[31m-                src="/banner-cadastro.jpg"[m
[31m-                alt="Banner de cadastro"[m
[31m-                className="w-full h-full obje